// mu account js revised 7-22-19(function onElementRendered(selector, cb, _attempts) {  var el = $(selector);  _attempts = ++_attempts || 1;  if (el.length) return cb(el);  if (_attempts == 60) return;  setTimeout(function() {    onElementRendered(selector, cb, _attempts);  }, 250);});// MU CONNECT GLOBAL NAVIGATION LINK$(document).ready(function(){  var url = "https://mizzou.starfishsolutions.com/starfish-ops/";  var label = "MU Connect";  $('#menu').append("<li class='menu-item ic-app-header__menu-list-item'> <a id='global_nav_muconnect_link' href='" + url + "' class='ic-app-header__menu-list-link' target='_blank'><div class='menu-item-container' aria-hidden='true'><svg xmlns='http://www.w3.org/2000/svg' class='ic-icon-svg ic-icon-svg--calendar' version='1.1' x='0' y='0' width='30px' height='31.25px' viewBox='0 0 30 31.25' enable-background='new 0 0 30 31.25' xml:space='preserve'><polygon fill='none' stroke='#FFFFFF' stroke-miterlimit='10' points='1,19.734 4.327,16.961 7.284,14.189 8.208,12.71 8.208,11.786 8.208,9.753 5.62,6.611 4.604,5.687 4.604,3.468 5.99,3.468 8.208,4.762 10.981,6.056 12.459,7.166 13.569,7.535 14.862,7.535 16.525,5.317 18.189,3.468 20.223,1.253 21.886,1.253 22.81,2.914 22.81,4.393 21.886,6.426 21.146,8.274 20.962,10.494 21.517,11.786 22.81,13.634 25.582,14.743 28.17,16.037 28.17,16.961 28.17,18.44 26.321,18.625 22.995,18.44 21.332,18.625 19.298,19.734 18.374,22.506 18.189,24.539 18.004,27.127 17.08,29.16 15.786,29.16 14.585,28.236 13.384,25.648 12.83,23.246 12.09,21.212 10.426,19.734 8.208,19.734 6.175,20.658 2.664,20.842 1,20.842'/></svg></div><div class='menu-item__text'>"+label+"</div></a> </li>");});//GOOGLE ANALYTICS  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');  ga('create', 'UA-73847455-1', 'auto');  ga('send', 'pageview');//accordions without dependencies beta testing 7-18-19window.addEventListener('load', function () {(function(window) {  'use strict';  var uniqueId = 0;       var Accordion = function Accordion(selector, userOptions) {       var ac = {            init: function init() {        var _this = this;        // Defaults        var defaults = {          duration: 400,           itemNumber: 0,           aria: true,           closeOthers: true,           showItem: true,           elementClass: 'ac-item',           questionClass: 'ac-header',           answerClass: 'ac-content',           targetClass: 'ac-target',           onToggle: function onToggle() {}         };        if (Array.isArray(selector)) {          if (selector.length) {            selector.map(function(single) {              return new Accordion(single, userOptions);            });          }          return false;        }        this.options = extendDefaults(defaults, userOptions);        this.container = document.querySelector(selector);        this.elements = this.container.querySelectorAll('.' + this.options.elementClass);        var length = this.elements.length;        if (this.options.aria) {          this.container.setAttribute('role', 'tablist');        }        var _loop = function _loop(i) {          var element = _this.elements[i];          // When JS is enabled, add the class to the elements          element.classList.add('js-enabled');          _this.hideElement(element);          _this.setTransition(element);          _this.generateID(element);          if (_this.options.aria) {            _this.setARIA(element);          }          element.addEventListener('keydown', function(event) {            if (event.keyCode == 13) {              _this.callEvent(i, event);            }          });          element.addEventListener('click', function(event) {            _this.callEvent(i, event);          });        };        for (var i = 0; i < length; i++) {          _loop(i);        }        if (this.options.showItem) {                    var el = this.elements[0];          if (typeof this.options.itemNumber === 'number' && this.options.itemNumber < length) {            el = this.elements[this.options.itemNumber];          }          this.toggleElement(el, false);        }        this.resizeHandler();      },      hideElement: function hideElement(element) {        var answer = element.querySelector('.' + this.options.answerClass);        answer.style.height = 0;      },      setTransition: function setTransition(element) {        var el = element.querySelector('.' + this.options.answerClass);        var transition = isWebkit('transition');        el.style[transition] = this.options.duration + 'ms';      },      generateID: function generateID(element) {        element.setAttribute('id', 'ac-item-'.concat(uniqueId));        uniqueId++;      },      setARIA: function setARIA(element) {        var question = element.querySelector('.' + this.options.questionClass);        var answer = element.querySelector('.' + this.options.answerClass);        question.setAttribute('role', 'tab');        question.setAttribute('aria-expanded', 'false');        answer.setAttribute('role', 'tabpanel');      },      updateARIA: function updateARIA(element, value) {        var question = element.querySelector('.' + this.options.questionClass);        question.setAttribute('aria-expanded', value);      },      callEvent: function callEvent(index, event) {        var target = event.target.className;        if (target.match(this.options.questionClass) || target.match(this.options.targetClass)) {          event.preventDefault();          if (this.options.closeOthers) {            this.closeAllElements(index);          }          this.toggleElement(this.elements[index]);        }      },      toggleElement: function toggleElement(element) {        var animation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;        var answer = element.querySelector('.' + this.options.answerClass);        var height = answer.scrollHeight;        var ariaValue;        element.classList.toggle('is-active');        if (!animation) {          answer.style.height = 'auto';        }        if (parseInt(answer.style.height) > 0) {          ariaValue = false;          requestAnimationFrame(function() {            answer.style.height = 0;          });        } else {          ariaValue = true;          requestAnimationFrame(function() {            answer.style.height = height + 'px';          });        }        if (this.options.aria) {          this.updateARIA(element, ariaValue);        }        if (animation) {          this.options.onToggle(element, this.elements);        }      },      closeAllElements: function closeAllElements(current) {        var length = this.elements.length;        for (var i = 0; i < length; i++) {          if (i != current) {            var element = this.elements[i];            if (element.classList.contains('is-active')) {              element.classList.remove('is-active');            }            if (this.options.aria) {              this.updateARIA(element, false);            }            this.hideElement(element);          }        }      },      changeHeight: function changeHeight() {        var height;        var answer;        var activeElement = this.container.querySelectorAll('.' + this.options.elementClass + '.is-active');        for (var i = 0; i < activeElement.length; i++) {          answer = activeElement[i].querySelector('.' + this.options.answerClass);          requestAnimationFrame(function() {            answer.style.height = 'auto';            height = answer.offsetHeight;            requestAnimationFrame(function() {              answer.style.height = height + 'px';            });          });        }      },      resizeHandler: function resizeHandler() {        var _this2 = this;        window.addEventListener('resize', function() {          _this2.changeHeight();        });      }    };    var isWebkit = function isWebkit(property) {      if (typeof document.documentElement.style[property] === 'string') {        return property;      }      property = capitalizeFirstLetter(property);      property = 'webkit'.concat(property);      return property;    };    var capitalizeFirstLetter = function capitalizeFirstLetter(string) {      return string.charAt(0).toUpperCase() + string.slice(1);    };    var extendDefaults = function extendDefaults(defaults, properties) {      for (var property in properties) {        defaults[property] = properties[property];      }      return defaults;    };    window.requestAnimationFrame = (function() {      return (        window.requestAnimationFrame ||        window.webkitRequestAnimationFrame ||        function(callback) {          window.setTimeout(callback, 1000 / 60);        }      );    })();    ac.init();  };  window.Accordion = Accordion;     new Accordion('.mu-ac-wrapper');  })(window);}, false);